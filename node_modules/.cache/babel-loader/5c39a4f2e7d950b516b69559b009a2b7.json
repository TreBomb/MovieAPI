{"ast":null,"code":"var _jsxFileName = \"/Users/jeffreyepstein/Development/Code/MovieAPI/src/components/SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchBar({\n  setSearchedMovies\n}) {\n  _s();\n\n  const SEARCH_PATH = \"https://api.themoviedb.org/3/search/movie?api_key=96e1ba7547341bdadc80d9ff0f1edbab&language=en-US&query=\";\n  const SEARCH_FILTER = \"&include_adult=false\";\n  const [text, setText] = useState(\"\");\n  useEffect(() => {\n    if (text !== \"\") {\n      fetch(`${SEARCH_PATH}${text}${SEARCH_FILTER}`).then(resp => resp.json()).then(data => setSearchedMovies(data.results));\n    }\n  }, [text]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"searchbar\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      value: text,\n      type: \"text\",\n      id: \"search\",\n      placeholder: \"Search Movies\",\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchBar, \"mMfSPvg3kjJBAgiHJD0l85bq0UA=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/jeffreyepstein/Development/Code/MovieAPI/src/components/SearchBar.js"],"names":["React","useEffect","useState","SearchBar","setSearchedMovies","SEARCH_PATH","SEARCH_FILTER","text","setText","fetch","then","resp","json","data","results","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA0C;AAAA;;AACtC,QAAMC,WAAW,GAAG,0GAApB;AACA,QAAMC,aAAa,GAAG,sBAAtB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,IAAI,KAAK,EAAb,EAAiB;AACbE,MAAAA,KAAK,CAAE,GAAEJ,WAAY,GAAEE,IAAK,GAAED,aAAc,EAAvC,CAAL,CACCI,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEMG,IAAI,IAAIT,iBAAiB,CAACS,IAAI,CAACC,OAAN,CAF/B;AAGH;AACJ,GANQ,EAMN,CAACP,IAAD,CANM,CAAT;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACI;AACI,MAAA,KAAK,EAAEA,IADX;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,EAAE,EAAC,QAHP;AAII,MAAA,WAAW,EAAC,eAJhB;AAKI,MAAA,QAAQ,EAAGQ,CAAD,IAAOP,OAAO,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV;AAL5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAxBQd,S;;KAAAA,S;AA0BT,eAAeA,SAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\n\nfunction SearchBar({ setSearchedMovies }) {\n    const SEARCH_PATH = \"https://api.themoviedb.org/3/search/movie?api_key=96e1ba7547341bdadc80d9ff0f1edbab&language=en-US&query=\";\n    const SEARCH_FILTER = \"&include_adult=false\";\n    const [text, setText] = useState(\"\");\n\n    useEffect(() => {\n        if (text !== \"\") {\n            fetch(`${SEARCH_PATH}${text}${SEARCH_FILTER}`)\n            .then(resp => resp.json())\n            .then(data => setSearchedMovies(data.results))\n        }\n    }, [text])\n\n    return(\n        <div className=\"searchbar\">\n            <input\n                value={text}\n                type=\"text\"\n                id=\"search\"\n                placeholder=\"Search Movies\"\n                onChange={(e) => setText(e.target.value)}\n            />\n        </div>\n    );\n}\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}