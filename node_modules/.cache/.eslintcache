[{"/Users/trebomb/Development/Mod2/MovieAPI/src/index.js":"1","/Users/trebomb/Development/Mod2/MovieAPI/src/reportWebVitals.js":"2","/Users/trebomb/Development/Mod2/MovieAPI/src/components/App.js":"3","/Users/trebomb/Development/Mod2/MovieAPI/src/components/Header.js":"4","/Users/trebomb/Development/Mod2/MovieAPI/src/components/MovieList.js":"5","/Users/trebomb/Development/Mod2/MovieAPI/src/components/SearchBar.js":"6","/Users/trebomb/Development/Mod2/MovieAPI/src/components/Movie.js":"7","/Users/trebomb/Development/Mod2/MovieAPI/src/components/Popup.js":"8","/Users/trebomb/Development/Mod2/MovieAPI/src/components/NavBar.js":"9","/Users/trebomb/Development/Mod2/MovieAPI/src/components/ViewAll.js":"10","/Users/trebomb/Development/Mod2/MovieAPI/src/components/IndividualList.js":"11","/Users/trebomb/Development/Mod2/MovieAPI/src/components/StarRating.js":"12"},{"size":604,"mtime":1631641777003,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1631541523274,"results":"15","hashOfConfig":"14"},{"size":3046,"mtime":1631683875426,"results":"16","hashOfConfig":"14"},{"size":468,"mtime":1631653514695,"results":"17","hashOfConfig":"14"},{"size":644,"mtime":1631683875428,"results":"18","hashOfConfig":"14"},{"size":1045,"mtime":1631683875428,"results":"19","hashOfConfig":"14"},{"size":1695,"mtime":1631720985912,"results":"20","hashOfConfig":"14"},{"size":287,"mtime":1631584336511,"results":"21","hashOfConfig":"14"},{"size":397,"mtime":1631650933885,"results":"22","hashOfConfig":"14"},{"size":476,"mtime":1631653364651,"results":"23","hashOfConfig":"14"},{"size":565,"mtime":1631650529820,"results":"24","hashOfConfig":"14"},{"size":2616,"mtime":1631723534178,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"r7mv4l",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/trebomb/Development/Mod2/MovieAPI/src/index.js",[],["56","57"],"/Users/trebomb/Development/Mod2/MovieAPI/src/reportWebVitals.js",[],"/Users/trebomb/Development/Mod2/MovieAPI/src/components/App.js",["58","59","60"],"import React, {useState, useEffect} from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport logo from '../logo.svg';\nimport Header from \"./Header\";\nimport MovieList from \"./MovieList\";\nimport IndividualList from \"./IndividualList\";\nlet sessionID;\n\n\nfunction App() {\n  const POPULAR_LIST = \"https://api.themoviedb.org/3/movie/popular?api_key=96e1ba7547341bdadc80d9ff0f1edbab&language=en-US&page=1\";\n  const [popularList, setPopularList] = useState([]);\n\n  const NOWPLAYING_LIST = \"https://api.themoviedb.org/3/movie/now_playing?api_key=96e1ba7547341bdadc80d9ff0f1edbab&language=en-US&page=1\";\n  const [nowPlayingList, setNowPlayingList] = useState([]);\n\n  const ALL_LIST = \"https://api.themoviedb.org/3/discover/movie?api_key=96e1ba7547341bdadc80d9ff0f1edbab&language=en-US&sort_by=vote_count.desc&include_adult=false&include_video=false&page=1&with_watch_monetization_types=flatrate\";\n  const [allList, setAllList] = useState([]);\n\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [page, setPage] = useState(\"/\");\n  \n\n  useEffect(() => {\n    fetch(POPULAR_LIST)\n    .then(resp => resp.json())\n    .then(data => {\n      setPopularList(data.results);\n    })\n\n    fetch(NOWPLAYING_LIST)\n    .then(resp => resp.json())\n    .then(data => {\n      setNowPlayingList(data.results);\n    })\n\n    fetch(ALL_LIST)\n    .then(resp => resp.json())\n    .then(data => {\n      setAllList(data.results);\n    })\n\n    fetch('https://api.themoviedb.org/3/authentication/guest_session/new?api_key=96e1ba7547341bdadc80d9ff0f1edbab')\n    .then(resp => resp.json())\n    .then(data => {\n      console.log(data);\n      sessionID = data.guest_session_id;\n    })\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Header setSearchedMovies={setSearchedMovies} />\n      <Switch>\n        <Route exact path=\"/\">\n          <div id=\"spacer\"></div>\n          <MovieList movieListArray={nowPlayingList} title=\"Now Playing\" />\n          <MovieList movieListArray={popularList} title=\"Most Popular\" />\n        </Route>\n        <Route exact path=\"/popular\">\n        <div id=\"spacer\"></div>\n          <IndividualList movieListArray={popularList} title=\"Most Popular\" />\n        </Route>\n        <Route exact path=\"/playing\">\n        <div id=\"spacer\"></div>\n          <IndividualList movieListArray={nowPlayingList} title=\"Now Playing\" />\n        </Route>\n        <Route exact path=\"/all\">\n        <div id=\"spacer\"></div>\n          <IndividualList movieListArray={allList} title=\"All\" />\n        </Route>\n        <Route exact path=\"/home\">\n        <div id=\"spacer\"></div>\n          <MovieList movieListArray={nowPlayingList} title=\"Now Playing\" />\n          <MovieList movieListArray={popularList} title=\"Most Popular\" />\n        </Route>\n        <Route path=\"/search\">\n        <div id=\"spacer\"></div>\n          <IndividualList movieListArray={searchedMovies} title=\"Search Results\" />\n        </Route>\n        <Route path=\"*\">\n          <h1>404 not found</h1>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\nexport {sessionID};","/Users/trebomb/Development/Mod2/MovieAPI/src/components/Header.js",[],"/Users/trebomb/Development/Mod2/MovieAPI/src/components/MovieList.js",["61","62"],"import React, { useState, useEffect } from \"react\";\nimport Movie from \"./Movie\";\nimport ViewAll from \"./ViewAll\";\n\nfunction MovieList({ movieListArray, title, onViewMore }) {\n    \n    return (\n        <div id=\"movie-list-container\">\n            <h2 id={title}>{title}</h2>\n            <div id=\"movie-grid\">\n            {movieListArray.map(movie => {\n                return(\n                    <Movie key={movie.id} movie={movie}/>\n                )\n            })}\n            </div>\n            <ViewAll section={title} />\n            <hr></hr>\n            {/* <button>View More</button> */}\n        </div>\n    );\n}\n\nexport default MovieList;","/Users/trebomb/Development/Mod2/MovieAPI/src/components/SearchBar.js",["63"],"import React, {useEffect, useState} from \"react\";\nimport { useHistory } from 'react-router-dom';\n\nfunction SearchBar({ setSearchedMovies }) {\n    const SEARCH_PATH = \"https://api.themoviedb.org/3/search/movie?api_key=96e1ba7547341bdadc80d9ff0f1edbab&language=en-US&query=\";\n    const SEARCH_FILTER = \"&include_adult=false\";\n    const [text, setText] = useState(\"\");\n    const history = useHistory();\n\n    useEffect(() => {\n        if (text !== \"\") {\n            fetch(`${SEARCH_PATH}${text}${SEARCH_FILTER}`)\n            .then(resp => resp.json())\n            .then(data => setSearchedMovies(data.results))\n            history.push(`/search/${text}`);\n        } else {\n            history.push(\"/\");\n        }\n    }, [text])\n    return(\n        <div className=\"searchbar\">\n            <input\n                value={text}\n                type=\"text\"\n                id=\"search\"\n                placeholder= \"Search Movies\"\n                onChange={(e) => setText(e.target.value)}\n            />\n        </div>\n    );\n}\n\nexport default SearchBar;","/Users/trebomb/Development/Mod2/MovieAPI/src/components/Movie.js",["64","65"],"import React, { useState, useEffect } from \"react\";\nimport Popup from \"./Popup\";\nimport StarRating from \"./StarRating\";\n\n\nfunction Movie ({ movie, onClickSelect }) {\n    const BASE_URL = \"https://api.themoviedb.org/3\";\n    const IMG_BASE_URL = \"https://image.tmdb.org/t/p/w500/\";\n    const [selectedMovie, setSelectedMovies] = useState([]);\n    // const [movieRating, setMovieRatings] = useState([]);\n\n    useEffect(() => {\n        fetch(`${BASE_URL}/movie/${movie.id}?api_key=96e1ba7547341bdadc80d9ff0f1edbab`)\n        .then(resp => resp.json())\n        .then(data => {\n            setSelectedMovies(data);\n        });\n    }, []);\n\n    function onClickSelect() {\n        console.log(`${movie.title} was clicked!`);\n    }   \n\n    const [isOpen, setIsOpen] = useState(false);\n \n    const togglePopup = () => {\n        setIsOpen(!isOpen);\n    }\n\n    // add onClick handler when clicked fetch movie by id, see endpoints list\n\n    //set state of current movie to API response, show card and add details to compnent\n    return(\n        <div>\n        <img src={`${IMG_BASE_URL}${movie.poster_path}`} alt={`${movie.title} Poster`} onClick={togglePopup}></img>\n      {isOpen && <Popup\n        content={<>\n          <h1>{selectedMovie.title}</h1>\n          <p>{selectedMovie.release_date.substr(0, 4)}</p>\n          <p>Rating: {selectedMovie.vote_average}/10  ({selectedMovie.vote_count})</p>\n          <StarRating movie={movie} />\n          {/* ^^ update this so if you click it the value is passed to the handler */}\n          <p>{selectedMovie.overview}</p>\n          {/* <button>{}</button>  */}\n        </>}\n        handleClose={togglePopup}\n      />}\n        </div>\n    );\n}\n\nexport default Movie;\n","/Users/trebomb/Development/Mod2/MovieAPI/src/components/Popup.js",[],"/Users/trebomb/Development/Mod2/MovieAPI/src/components/NavBar.js",[],"/Users/trebomb/Development/Mod2/MovieAPI/src/components/ViewAll.js",[],"/Users/trebomb/Development/Mod2/MovieAPI/src/components/IndividualList.js",["66"],"import React from \"react\";\nimport Movie from \"./Movie\";\nimport ViewAll from \"./ViewAll\";\n\nfunction MovieList({ movieListArray, title }) {\n    return (\n        <div id=\"movie-list-container\">\n            <h2 id={title}>{title}</h2>\n            <div id=\"movie-grid\">\n            {movieListArray.map(movie => {\n                return(\n                    <Movie key={movie.id} movie={movie}/>\n                )\n            })}\n            <div className=\"pages\">\n                \n            </div>\n            </div>\n        </div>\n    );\n}\n\nexport default MovieList;","/Users/trebomb/Development/Mod2/MovieAPI/src/components/StarRating.js",["67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":3,"column":8,"nodeType":"74","messageId":"75","endLine":3,"endColumn":12},{"ruleId":"72","severity":1,"message":"76","line":21,"column":10,"nodeType":"74","messageId":"75","endLine":21,"endColumn":14},{"ruleId":"72","severity":1,"message":"77","line":21,"column":16,"nodeType":"74","messageId":"75","endLine":21,"endColumn":23},{"ruleId":"72","severity":1,"message":"78","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":25},{"ruleId":"72","severity":1,"message":"79","line":1,"column":27,"nodeType":"74","messageId":"75","endLine":1,"endColumn":36},{"ruleId":"80","severity":1,"message":"81","line":19,"column":8,"nodeType":"82","endLine":19,"endColumn":14,"suggestions":"83"},{"ruleId":"80","severity":1,"message":"84","line":18,"column":8,"nodeType":"82","endLine":18,"endColumn":10,"suggestions":"85"},{"ruleId":"86","severity":1,"message":"87","line":20,"column":14,"nodeType":"74","messageId":"88","endLine":20,"endColumn":27},{"ruleId":"72","severity":1,"message":"89","line":3,"column":8,"nodeType":"74","messageId":"75","endLine":3,"endColumn":15},{"ruleId":"80","severity":1,"message":"84","line":59,"column":10,"nodeType":"82","endLine":59,"endColumn":18,"suggestions":"90"},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'page' is assigned a value but never used.","'setPage' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'setSearchedMovies'. Either include them or remove the dependency array. If 'setSearchedMovies' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["93"],"React Hook useEffect has a missing dependency: 'movie.id'. Either include it or remove the dependency array.",["94"],"no-redeclare","'onClickSelect' is already defined.","redeclared","'ViewAll' is defined but never used.",["95"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [history, setSearchedMovies, text]",{"range":"102","text":"103"},"Update the dependencies array to be: [movie.id]",{"range":"104","text":"105"},"Update the dependencies array to be: [movie.id, rating]",{"range":"106","text":"107"},[717,723],"[history, setSearchedMovies, text]",[627,629],"[movie.id]",[1926,1934],"[movie.id, rating]"]